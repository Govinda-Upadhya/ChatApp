generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  ACCEPTED
  REJECTED
  PENDING
}

model User {
  username         String           @id @unique
  email            String           @unique
  password         String?
  profile          String?
  googleId         String?
  room             Room[]
  
  sentChats        Chat[]           @relation("SentChats")
  receivedChats    Chat[]           @relation("ReceivedChats")

  requestSent      FriendRequest[]  @relation("RequestSent")
  requestReceived  FriendRequest[]  @relation("RequestReceived")

 friendships1 Friendship[] @relation("FriendshipUser1")
  friendships2 Friendship[] @relation("FriendshipUser2")
}

model Chat {
  id            Int      @id @default(autoincrement())
  message       String
  sender        String
  receiver      String
  time          DateTime @default(now())

  senderUser    User     @relation("SentChats", fields: [sender], references: [username])
  receiverUser  User     @relation("ReceivedChats", fields: [receiver], references: [username])
}

model Room {
  id     Int     @id @default(autoincrement())
  name   String?
  users  User[]
}

model FriendRequest {
  id              Int      @id @default(autoincrement())
  sender          String
  receiver        String
  status          Status   @default(PENDING)
  time            DateTime @default(now())

  requestSender   User     @relation("RequestSent", fields: [sender], references: [username])
  requestReceiver User     @relation("RequestReceived", fields: [receiver], references: [username])
}

model Friendship {
  user1     String
  user2     String
  createdAt DateTime @default(now())

  userA     User     @relation("FriendshipUser1", fields: [user1], references: [username])
  userB     User     @relation("FriendshipUser2", fields: [user2], references: [username])

  @@id([user1, user2])
}


